// Apply the versions plugin to check for module dependency updates.
plugins {
    id 'com.github.ben-manes.versions' version '0.28.0'
}

// Apply the java plugin to add support for Java.
apply plugin: 'java'

// Apply the application plugin to add support for building an application.
apply plugin: 'application'

// Apply the versions plugin.
apply plugin: 'com.github.ben-manes.versions'

// In this section you declare where to find the dependencies of your project.
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    //mavenCentral()
    
    maven {
        url 'https://josm.openstreetmap.de/nexus/content/groups/public/'
    }
}

dependencies {
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.14'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    implementation group: 'joda-time', name: 'joda-time', version: '2.10.6'
    implementation group: 'com.github.scribejava', name: 'scribejava-core', version: '4.1.0'
    implementation group: 'org.openstreetmap.jmapviewer', name: 'jmapviewer', version: '2.13'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
    
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'
}

// Define the main class for the application.
mainClassName = 'cmanager.Main'

project.ext.ocOkapiPropertiesFile = projectDir.getPath() + "${File.separator}oc_okapi.properties"
sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '0.2.46'

wrapper {
    gradleVersion = '6.3'
}

task OcOkapiKeys(type: Copy) {
    assert file(project.ocOkapiPropertiesFile).exists() : project.ocOkapiPropertiesFile + ' file missing. Please follow the instructions in README.md'
    outputs.files 'src/main/java/cmanager/okapi/ConsumerKeys.java'
    Properties properties = new Properties()
    File propertiesFile = new File(project.ocOkapiPropertiesFile)
    properties.load(propertiesFile.newDataInputStream())
    from('templates') {
        exclude '**/*.properties', 'TestClientCredentials.java', 'Version.java'
    }
    expand(
        oc_okapi_de_consumer_key: properties.getProperty('oc_okapi_de_consumer_key'),
        oc_okapi_de_consumer_secret: properties.getProperty('oc_okapi_de_consumer_secret')
    )
    into 'src/main/java/cmanager/okapi'
}

task OcTestClientLogin(type: Copy) {
    assert file(project.ocOkapiPropertiesFile).exists() : project.ocOkapiPropertiesFile + ' file missing. Please follow the instructions in README.md'
    outputs.files 'src/test/java/cmanager/okapi/helper/TestClientCredentials.java'
    Properties properties = new Properties()
    File propertiesFile = new File(project.ocOkapiPropertiesFile)
    properties.load(propertiesFile.newDataInputStream())
    from('templates') {
        exclude '**/*.properties', 'ConsumerKeys.java', 'Version.java'
    }
    expand(
        oc_test_client_username: properties.getProperty('oc_test_client_username'),
        oc_test_client_password: properties.getProperty('oc_test_client_password')
    )
    into 'src/test/java/cmanager/okapi/helper'
}

task Version(type: Copy) {
    outputs.files 'src/main/java/cmanager/global/Version.java'
    from('templates') {
        exclude '**/*.properties', 'ConsumerKeys.java', 'TestClientCredentials.java'
    }
    expand(
        version: version
    )
    into 'src/main/java/cmanager/global'
}

compileJava.dependsOn OcOkapiKeys, Version
compileTestJava.dependsOn OcTestClientLogin

clean.doFirst {
    delete 'src/main/java/cmanager/okapi/ConsumerKeys.java'
    delete 'src/main/java/cmanager/global/Version.java'
    delete 'src/test/java/cmanager/okapi/helper/TestClientCredentials.java'
}

jar {
    archiveBaseName = 'cm'
    manifest { attributes 'Main-Class': mainClassName }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
