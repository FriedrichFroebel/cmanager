# Build a Java project with Gradle for every release.
# Based upon https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle.

name: Build for every release

# Run this on every release publish.
on:
  release:
    types: [published]


jobs:
  # The Ubuntu-based build job.
  build:
    runs-on: ubuntu-latest

    # Our global environment variables used as a replacement for providing an `oc_okapi.properties` file.
    env:
      OC_OKAPI_DE_CONSUMER_KEY: ${{ secrets.OC_OKAPI_DE_CONSUMER_KEY }}
      OC_OKAPI_DE_CONSUMER_SECRET: ${{ secrets.OC_OKAPI_DE_CONSUMER_SECRET }}

    # Run compilation tests.
    # EOL: https://adoptium.net/support/ and https://endoflife.date/oracle-jdk
    # The format checker requires at least Java 11, while the other ones are more recent.
    # Please note that we still support Java versions starting with Java 8, but we cannot compile our
    # code with Java 8 as they miss the newer APIs we reference inside the `Compatibility.java` file.
    strategy:
      matrix:
        java: [17, 21, 25, GA]
      # Make sure to always run for all Java versions to sort out possible incompatibilities.
      # Example: Gradle might not yet support the GA/EA releases, as indicated by
      # https://docs.gradle.org/current/userguide/compatibility.html
      fail-fast: false

    # Use a better name.
    name: Linux Build with Java ${{ matrix.java }}

    # The actual build process.
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      # Use OpenJDK from https://jdk.java.net/.
      # See https://github.com/oracle-actions/setup-java.
      # This action only supports the latest release, see https://github.com/oracle-actions/setup-java/issues/14.
      # For this reason, all other builds happen with the https://github.com/actions/setup-java action.
      - name: Download JDK (jdk.java.net)
        uses: oracle-actions/setup-java@v1
        id: jdk
        with:
          website: jdk.java.net
          release: ${{ matrix.java }}
        if: ${{ contains(fromJson('["GA", "EA"]'), matrix.java) }}
      - name: Download JDK (Eclipse)
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
        if: ${{ !contains(fromJson('["GA", "EA"]'), matrix.java) }}
      - name: Display Java Version
        run: java --version

      # Cache some Gradle files.
      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle Packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      # Run the actual steps after the preparations.
      - name: Grant Execute Permission for gradlew
        run: chmod +x gradlew
      - name: Clean Build Area
        run: ./gradlew clean
      - name: Build JAR
        run: ./gradlew jar

      # Upload the artifact to access it for deployment.
      - name: Upload Artifact
        if: ${{ matrix.java == 'GA' && !github.event.release.prerelease }}
        uses: actions/upload-artifact@v5
        with:
          name: cm-ci.jar
          path: build/libs/cm-ci.jar

  # Deploy the release.
  deploy:
    runs-on: ubuntu-latest

    name: Deploy Release

    # Run after the build.
    needs: build

    # Do not run on pre-releases.
    if: "!github.event.release.prerelease"

    # Perform the deployment.
    steps:
      # Download the artifact and rename it.
      - name: Download Artifact
        uses: actions/download-artifact@v6
        with:
          name: cm-ci.jar
          path: artifacts/
      - name: Rename Artifact
        run:
          mv artifacts/cm-ci.jar artifacts/cm-${{ github.event.release.name }}.jar

      # Upload the asset.
      # https://github.com/ncipollo/release-action
      # As the release exists already, we have to set some more options to keep the existing properties.
      - name: Upload Release Asset
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.event.release.name }}
          artifacts: artifacts/cm-${{ github.event.release.name }}.jar
          artifactContentType: application/x-java-archive
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          allowUpdates: true
