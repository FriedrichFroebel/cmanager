# Build a Java project with Gradle for every pull request.
# Based upon https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle.

name: Build for every Pull Request

# Run this on every pull request.
on: pull_request


jobs:
  # The Ubuntu-based build job.
  buildLinux:
    runs-on: ubuntu-latest

    # Our global environment variables used as a replacement for providing an `oc_okapi.properties` file.
    env:
      OC_OKAPI_DE_CONSUMER_KEY: REPLACE_ME
      OC_OKAPI_DE_CONSUMER_SECRET: REPLACE_ME

    # Run compilation tests using the OpenJDK.
    # The format checker requires at least Java 11, while the other ones are more recent.
    # Please note that we still support Java versions starting with Java 8, but we cannot compile our
    # code with Java 8 as they miss the newer APIs we reference inside the `Compatibility.java` file.
    strategy:
      matrix:
        java: [18]

    # Use a better name.
    name: Linux Build with Java ${{ matrix.java }}

    # The actual build process.
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Use OpenJDK from https://jdk.java.net/.
      # See https://github.com/oracle-actions/setup-java
      - name: Download JDK
        uses: oracle-actions/setup-java@v1
        id: jdk
        with:
          website: jdk.java.net
          release: ${{ matrix.java }}
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: Display Java Version
        run: java --version

      # Cache some Gradle files.
      - name: Cache Gradle Wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle Packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      # Run the actual steps after the preparations.
      - name: Grant Execute Permission for gradlew
        run: chmod +x gradlew
      - name: Clean Build Area
        run: ./gradlew clean
      - name: Verify Code Format
        run: ./gradlew verifyGoogleJavaFormat
      - name: Build JAR
        run: ./gradlew jar
